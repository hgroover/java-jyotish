# $Id: Makefile 41 2015-11-01 17:59:31Z henry_groover $
# Makefile for javajyotish
# Updated to work with GNU make in Ubuntu 10.04+ 22-Nov-2011

.SUFFIXES:

.SUFFIXES: .java .class .html .shtml .gif .jpg

OLD=1

COPY=cp -p
COPY_R=${COPY} -r
RM=rm -f

ifeq (${WEBROOT},)
WEBROOT=/var/www
endif

# Customized local content
LOCALONLY_DIR:=$(shell test -d local_only && echo local_only)

# Target to deploy to, if not set in environment
ifeq (${DEPLOY_TO},)
export DEPLOY_TO:=$(shell hostname)
endif

# Optional local_only_${DEPLOY_TO} to override local_content and local_only
DEPLOY_LOCALONLY_DIR:=$(shell test -d local_only_${DEPLOY_TO} && echo local_only_${DEPLOY_TO})

# Optional makedefs_${DEPLOY_TO}.inc is used below to possibly override various values
DEPLOY_MAKEDEFS:=$(shell test -r makedefs_${DEPLOY_TO}.inc && echo makedefs_${DEPLOY_TO}.inc)

# Check for required packages
WHICH_JAVAC:=$(shell which javac)
ifeq (${WHICH_JAVAC},)
needs-javac:
	@echo "javac not found. Run"
	@echo "sudo apt-get install openjdk-6-jdk"
	@exit 1
endif

WHICH_GAWK:=$(shell which gawk)
ifeq (${WHICH_GAWK},)
needs-gawk:
	@echo "gawk not found. Run"
	@echo "sudo apt-get install gawk"
	@exit 1
endif

DEST=$(WEBROOT)/javajyotish

# Version components must match definitions in AChart.java and AChartRun.java. These are used to name the .jar file
# to avoid problems with aggressive .jar cacheing
ACHART_MAJOR=1
ACHART_MINOR=54
$(info Build version ${ACHART_MAJOR}.${ACHART_MINOR})

ACHART_BUILD:=$(shell gawk '/^.ver_build *= *[0-9]+;/ {match($$0,/^.ver_build *= *([0-9]+);/,a); print a[1];}' achart.php)
ACHART_JAR=AChart-${ACHART_MAJOR}${ACHART_MINOR}.jar
export CP_LIST=$(abspath .):$(abspath ./SwissEph-2011.jar)

# If plugin.jar is not in /usr/lib/jvm/java-6-openjdk/jre/lib as expected,
# it may be in /usr/share/icedtea-web
ALT_PLUGIN_LOCATION:=0
ICEDTEA_JAR:=/usr/share/icedtea-web/plugin.jar
ifeq ($(wildcard ${ICEDTEA_JAR}),${ICEDTEA_JAR})
ALT_PLUGIN_LOCATION:=1
endif

# Default drupal root - must also be defined in local_only_${DEPLOY_TO}/config.inc.php
# to enable Drupal integration
DRUPAL_ROOT_DIR:=

# If present, allow deployment-specific makefile to override default settings
ifneq (${DEPLOY_MAKEDEFS},)
include ${DEPLOY_MAKEDEFS}
endif

# Location of tz_world shapefile data (optionally used to rebuild achart-tzdata.js)
# Can be downloaded from http://efele.net/maps/tz/world/
TZWORLD_DIR:=../world
ifneq ($(wildcard ${TZWORLD_DIR}/tz_world.shp),)
TZWORLD_SHAPE:=${TZWORLD_DIR}/tz_world
endif

ifeq (${ALT_PLUGIN_LOCATION},1)
CP_LIST:=${CP_LIST}:${ICEDTEA_JAR}
endif

# Build for Java 1.6 (Java 6) compatibility using -source 1.6 but requires setting path to bootstrap rt.jar
.java.class:
	javac -g -Xlint:deprecation -classpath ${CP_LIST} $<

astro: ${DEST} ${ACHART_JAR} swiss astro_php astro_images
	cp -p ../runchart.sh ${DEST}
	@echo "Build  of ${ACHART_MAJOR}.${ACHART_MINOR}.${ACHART_BUILD} complete"

diff:
	@echo "Changes to achart / javajyotish ${ACHART_MAJOR}.${ACHART_MINOR}.${ACHART_BUILD}" > ../changes.txt
	cd .. ; svn diff -x '--ignore-all-space --ignore-eol-style' >> changes.txt
	@echo "Changes are in changes.txt - edit, commit then add to changelog"

.PHONY: astro astro_classes amath_base amath_ext1 amath_ext2 diff

# f specifies output .jar, e specifies class containing static main
${ACHART_JAR}: astro_classes
	-rm AChart*.jar ${DEST}/AChart*.jar
	jar cfe $@ AChart *.class a*/*.class generated/*.class
	${COPY} $@ ${DEST}

astro_classes:  \
	amath_base amath_ext1 amath_ext2 generated_sources \
	AChart.class JyotishCore.class AChartRun.class ChartPanel.class \
	TextPanel.class CaptionPanel.class DasaSet.class

amath_base: ${DEST}/amath_base
	${MAKE} -C $@

amath_ext1: amath_base ${DEST}/amath_ext1
	${MAKE} -C $@

amath_ext2: amath_ext1 ${DEST}/amath_ext2
	${MAKE} -C $@

generated_sources: generated/LayoutData.class
	@echo "Generated sources up to date"

generated/LayoutData.class: generated/LayoutData.java
	javac -g $^

# Source used for html5 aspects
TEMPLATE_SVG:=template2.svg

generated/LayoutData.java: generated Makefile ${TEMPLATE_SVG}
	@echo -e "// Source generated by Makefile rule for $@ - DO NOT EDIT - modify ${TEMPLATE_SVG}\n\npackage generated;\npublic class LayoutData {\npublic static final String[][] m_aHouseAspectPaths = {" > $@
	./template-to-java.sh ${TEMPLATE_SVG} >> $@
	@echo -e "};\n}" >> $@

.PHONY: astro_php astro_oldhtml astro_html astro_images swiss generated_sources

# datetimepicker_css.js and images2/* are for date/time selection
# docs at http://rainforestnet.com/datetimepicker
JS_SOURCES:=datetimepicker_css.js $(wildcard achart*.js) $(wildcard achart*.js.php)
PHP_SOURCES:=achart.php $(wildcard achart-*.php)
PHP_INCLUDES:=menu.inc.php quick-nav.inc.php server-calc.inc.php output/version.inc.php output/plugin.inc.php
LOCAL_SOURCES:=$(wildcard local_content/*)
LOCAL_ONLY:=
ifneq (${LOCALONLY_DIR},)
LOCAL_ONLY:=$(wildcard ${LOCALONLY_DIR}/*)
endif
DEPLOY_LOCAL_ONLY:=
ifneq (${DEPLOY_LOCALONLY_DIR},)
DEPLOY_LOCAL_ONLY:=$(wildcard ${DEPLOY_LOCALONLY_DIR}/*)
endif
PLUGIN_LIST:=$(wildcard plugins/*.php)
astro_php: \
	${PHP_SOURCES} ${PHP_INCLUDES} ${JS_SOURCES} ${LOCAL_SOURCES} ${PLUGIN_LIST}
	${COPY} $^ ${DEST}
ifneq (${LOCAL_ONLY},)
	@echo "Overriding destination with local content ${LOCAL_ONLY}"
	${COPY} ${LOCAL_ONLY} ${DEST}
endif
ifneq (${DEPLOY_LOCAL_ONLY},)
	@echo "Overriding destination with content specific to ${DEPLOY_TO} from ${DEPLOY_LOCALONLY_DIR}"
	${COPY} ${DEPLOY_LOCAL_ONLY} ${DEST}
endif

output/version.inc.php: output
	@echo "Creating $@ with ver_major=${ACHART_MAJOR}, ver_minor=${ACHART_MINOR}"
	@echo "<?php" > $@
	@echo -n '$$ver_minor = ' >> $@
	@echo "${ACHART_MINOR};" >> $@
	@echo -n '$$ver_major = ' >> $@
	@echo "${ACHART_MAJOR};" >> $@
	gawk '/^var js_.*_ver = [0-9]+;/ {match($$0,/^var js_(.*)_ver = ([0-9]+);/,a); printf "$$js_%s_ver = %s;\n", a[1], a[2];}' ${JS_SOURCES} >> $@
	@echo "// Generated by Makefile - trailing tag intentionally omitted" >> $@
	@ls -l $@

output/plugin.inc.php: output
	@echo "Creating $@ with plugin list: ${PLUGIN_LIST}"
	@echo "<?php" > $@
ifeq (${PLUGIN_LIST},)
	@echo "// No plugins found in plugins directory
else
	@for p in ${PLUGIN_LIST}; do echo "if (!isset(\$$skip_module['$$(basename $${p})'])) include_once '$$(basename $${p})';" >> $@; done
endif
	@echo "// Generated by Makefile - trailing tag intentionally omitted" >> $@
	@ls -l $@

.PHONY: output/version.inc.php output/plugin.inc.php

swiss: \
	$(wildcard ephe/*) SwissEph-2011.jar ${DEST}/ephe
	${COPY} ephe/* ${DEST}/ephe
	${COPY} SwissEph-2011.jar ${DEST}


astro_images: Makefile $(wildcard images/*) ${DEST}/images $(wildcard images2/*) ${DEST}/images2
	${COPY_R} images/* ${DEST}/images/
	${COPY_R} images2/* ${DEST}/images2/


# Dependencies exist only between packages

.PHONY: clean

clean:
	-${RM} *.class AChart*.jar output/*
	${MAKE} -C amath_base $@
	${MAKE} -C amath_ext1 $@
	${MAKE} -C amath_ext2 $@

# Drupal module install / update
ifneq (${DRUPAL_ROOT_DIR},)
DRUPAL_MODULE_DIR:=${DRUPAL_ROOT_DIR}/sites/all/modules
drupal-module-install: ${DRUPAL_MODULE_DIR}
ifneq ($(shell test -d ${DRUPAL_MODULE_DIR}/javajyotish_data && echo 1),1)
	@echo "Installing to ${DRUPAL_MODULE_DIR}/javajyotish_data (first time)"
	mkdir ${DRUPAL_MODULE_DIR}/javajyotish_data
	cp -p drupal-modules/javajyotish-data/* ${DRUPAL_MODULE_DIR}/javajyotish_data/
	@echo "Go to Drupal admin modules page (Administer / Site building / modules) and enable javajyotish_data"
else
	@echo "Updating ${DRUPAL_MODULE_DIR}/javajyotish_data"
	cp -p drupal-modules/javajyotish-data/* ${DRUPAL_MODULE_DIR}/javajyotish_data/
	@echo "Important: you must enable and run the update script on Drupal to handle any database changes!"
endif

sudo-drupal-sites:
	test -d ${DRUPAL_ROOT_DIR}/sites/all || { sudo mkdir ${DRUPAL_ROOT_DIR}/sites/all; sudo chgrp -R www-data ${DRUPAL_ROOT_DIR}/sites/all; sudo chmod -R 775 ${DRUPAL_ROOT_DIR}/sites/all; }
	test -d ${DRUPAL_ROOT_DIR}/sites/all/modules || { sudo mkdir ${DRUPAL_ROOT_DIR}/sites/all/modules; sudo chgrp -R www-data ${DRUPAL_ROOT_DIR}/sites/all/modules; sudo chown -R ${USER} ${DRUPAL_ROOT_DIR}/sites/all/modules; sudo chmod -R 775 ${DRUPAL_ROOT_DIR}/sites/all/modules; }
	@echo "You should be able to retry drupal-module-install now"

else
drupal-module-install sudo-drupal-sites:
	@echo "DRUPAL_ROOT_DIR not defined (must be on cmd line or in makedefs_${DEPLOY_TO}.inc)"
	@exit 1
endif

.PHONY: drupal-module-install sudo-drupal-sites

# Rebuild achart-tzdata.js from shapefile data
.PHONY: shapegrid
shapegrid: achart-tzdata.js
	@echo "achart-tzdata.js is up to date (source: $(wildcard ${TZWORLD_SHAPE}.*))"

ifeq (${TZWORLD_SHAPE},)
.PHONY: achart-tzdata.js
achart-tzdata.js:
	@echo "To rebuild achart-tzdata.js from more recent tz_world shape data, download http://efele.net/maps/tz/world/tz_world.zip"
	@echo "and extract to ${TZWORLD_DIR}"

else
achart-tzdata.js: $(wildcard ${TZWORLD_SHAPE}.*)
	@echo "Rebuilding $@ from sources (changed: $^)"
	python shapegrid.py ${TZWORLD_SHAPE} > $@

endif

# Linux OpenJDK command-line debug example
.PHONY: debug debug-textonly
DEBUG_DATE=19601107
DEBUG_TIME=2050
DEBUG_LAT=38N50
DEBUG_LON=77W00
DEBUG_DST=0
DEBUG_TZ=-0500
DEBUG_ARGS:= -cp ${ACHART_JAR}:${CP_LIST} AChart "Description=Test chart ${DEBUG_DATE} ${DEBUG_TIME}" time=${DEBUG_TIME} date=${DEBUG_DATE} latitude=${DEBUG_LAT} longitude=${DEBUG_LON} DST=${DEBUG_DST} TZ=${DEBUG_TZ} style=North debug=1
debug:
ifeq ($(shell which java),)
	@echo "java not in path, don't know how to run $@ standalone"
	@exit 1
endif
	java ${DEBUG_ARGS}

debug-textonly:
ifeq ($(shell which java),)
	@echo "java not in path, don't know how to run $@ standalone"
	@exit 1
endif
	java ${DEBUG_ARGS} TextOnly

# Directories we may need to create
${DEST} ${DEST}/amath_base ${DEST}/amath_ext1 ${DEST}/amath_ext2 ${DEST}/images ${DEST}/images2 ${DEST}/ephe output ${DRUPAL_MODULE_DIR} generated:
	mkdir -p $@

